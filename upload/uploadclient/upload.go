// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: upload.proto

package uploadclient

import (
	"context"

	"github.com/boyyang-love/micro-service-wallpaper-rpc/upload/pb/upload"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Base              = upload.Base
	FileUploadReq     = upload.FileUploadReq
	FileUploadRes     = upload.FileUploadRes
	FileUploadResData = upload.FileUploadResData

	Upload interface {
		FileUpload(ctx context.Context, in *FileUploadReq, opts ...grpc.CallOption) (*FileUploadRes, error)
	}

	defaultUpload struct {
		cli zrpc.Client
	}
)

func NewUpload(cli zrpc.Client) Upload {
	return &defaultUpload{
		cli: cli,
	}
}

func (m *defaultUpload) FileUpload(ctx context.Context, in *FileUploadReq, opts ...grpc.CallOption) (*FileUploadRes, error) {
	client := upload.NewUploadClient(m.cli.Conn())
	return client.FileUpload(ctx, in, opts...)
}
